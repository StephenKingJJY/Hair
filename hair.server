;使用单独的模式启动服务器版本的hair框架
;版本v1.4，不作为独立分发的新框架
;主要是删除所有GUI相关的部分，删除影响性能的定时器，始终保持命令行状态，加载尽可能少的组件
;通过文件的形式对接nodejs+express，实现hair驱动下的web工程
;作者：SK (jjy@wiwy.us)
;@MIT License

to hair.server [:hair_debug "true]
;调整窗口大小
fs windowset "FMSLogo 0

;打印文本信息
ct
make "CASEIGNOREDP "TRUE
pr "hair服务器框架启动中...
pr [StephenKing v1.4 @MIT License]

;启动预授权
make "hair_preauth "true
hair.debug.tool
SETFOCUS [Commander]

;检验记录环境变量
if 7 > hair.base.getitem (count item 2 LOGOVERSION)-2 item 2 LOGOVERSION [hair.debug.error [您的fmslogo版本过低，请使用7.0及以上版本获得更好体验。] stop]
if or (not member? "FMSLogo.exe files) (not member? "hair.package files) [hair.debug.error "当前目录错误或者文件缺失 stop]

;启动简写指令
hair.noconflict "$

;配置默认的变量
if not name? "hair_keepword [make "hair_keepword [class hair new hook all $ destroy cancel listen inherit method before after attr tip objectname havedefine]] ;设置框架保留字
if not name? "hair_version [make "hair_version 1.4] ;hair框架版本
if not name? "hair_language [make "hair_language "en_us] ;hair语言版本
if not name? "hair_detect [make "hair_detect "false] ;开启检测缓存
if not name? "hair_res [make "hair_res "hair_res] ;设定资源目录
if not name? "hair_timeauth [make "hair_timeauth 0] ;初始化时间戳
if not name? "hair_timer_id [make "hair_timer_id []] ;标记计时器占用id
if not name? "hair_background_async [make "hair_background_async []] ;支持异步语句
if not name? "hair_hook_array [make "hair_hook_array $array 200] ;钩子数组的默认最大存储值为200
if not name? "hair_hook_index [make "hair_hook_index []] ;设置一个索引，用于快速定位钩子函数
if not name? "hair_object_list [make "hair_object_list []] ;存储所有的对象名称
if not name? "hair_object_class [make "hair_object_class []] ;存储所有的类名
if not name? "hair_object_havedefine [make "hair_object_havedefine []] ;为了简化调用而已经定义过的过程名称
if not name? "hair_object_current [make "hair_object_current "] ;当前操作的对象，帮助简化调用

;配置web相关变量
if not name? "hair_router [make "hair_router []] ;初始化路由
if not name? "hair_cache [make "hair_cache []] ;初始化文件缓存，hair不需要对已经响应的文件做重复操作
if not name? "hair_maxcache [make "hair_maxcache 10] ;最大缓存数，默认为10，在高并发的时候增大该数字可以减少io压力
if not name? "hair_webkeep [make "hair_webkeep 0] ;web服务循环判定变量

;不再定义project项目类
;新建一个计时器类，保持所有类的首字母大写，用于良好的编码规范
new "Timer "Class
	.attr [id 1 delay 100 command [] mode noyield]
	.before [make "hair_timer_temp 0 for [i 1 31][
		if and (not member? :i :hair_timer_id)(:hair_timer_temp=0) [make "hair_timer_temp :i]]
		ifelse :hair_timer_temp = 0 [hair.debug.error "计时器已被用完 cancel][this.id.value :hair_timer_temp
		queue "hair_timer_id :hair_timer_temp]]
	.method "start [settimer this.id this.delay this.command]
	.method "stop [cleartimer this.id]
	.method "restart [this.stop this.start]
	.after [make "hair_timer_id remove this.id :hair_timer_id this.stop]
	;此处再定义当计时器的模式变更后的操作
	.listen "mode [if this.mode.h = this.mode [cancel]
		make "hair_timer_temp 0 ifelse this.mode="noyield [
		for [i 1 16] [if and (not member? :i :hair_timer_id) (:hair_timer_temp=0)[make "hair_timer_temp :i]]
		ifelse :hair_timer_temp = 0 [hair.debug.error "noyield模式计时器已被占满 cancel] [this.id.value :hair_timer_temp]
	] [
		for [i 17 31] [if and (not member? :i :hair_timer_id) (:hair_timer_temp=0)[make "hair_timer_temp :i]]
		ifelse :hair_timer_temp = 0 [hair.debug.error "yield模式计时器已被占满 cancel] [make "hair_timer_id remove this.id :hair_timer_id this.id.value :hair_timer_temp]
	]]
	.listen "id [ifelse member? this.id :hair_timer_id [hair.debug.error "该id已被占用 cancel][queue "hair_timer_id this.id make "hair_timer_id remove this.id.h :hair_timer_id]]

;定义一个htmlcontent类，用于处理router响应返回的内容
new "HtmlContent "Class


;默认仅加载web等必要模块
;考虑性能不使用原始file类，原生logo实现底层文件监听和输出html
;因为国际化需要加载sql和file，sql组件本身应该也是常用的
$use [hair.file hair.sql hair.i18n hair.web]

;获取保存当前目录
if not name? "hair_maindir [make "hair_maindir $whatdir]
if :hair_debug [pr se "当前hair程序执行主目录 :hair_maindir]

;关闭预授权
ern "hair_preauth

new "hair_timer_data "Timer
	.mode.value "noyield
	.delay.value 100
	.command.value [hair.background.async.repeat hair.hook.create "hair_timer_data]
	.start

;检测nodejs环境
localmake "node_version (hair.base.shell [node -v > node_temp.htxt] "node_temp.htxt "vbs)
ifelse empty? :node_version [pr _e "服务器可能尚未安装nodejs，使用$nodejs命令可以访问官方站点。] [
	(pr "服务器nodejs版本号 :node_version)]

;读取数据库中保存的router表
pr "处理router数据库信息
localmake "router_num hair.base.delitem 12 first bf :hair_sql_router
for [i 2 :router_num][queue "hair_router arraytolist item :i :hair_sql_router_data pr last :hair_router]

pr "框架启动完毕
end
bury "hair.server
