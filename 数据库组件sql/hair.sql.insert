;sql组件用来给表插入新值
;不要求包含每一个值，自动生成默认值
;命令版本号v1.2
;通过mode指定是否同步到资源文件夹

to hair.sql.insert :tablename :field [:mode "async]
hair.detect
if not name? word "hair_sql_ :tablename [hair.debug.error se :tablename "该表不存在 stop]
;对默认参数做解释，除了默认值之外，目前支持自增描述autoincrease
localmake "ori_sqlfield thing word "hair_sql_ :tablename
;初始化字段及默认值
localmake "new_sqlfield []
repeat (count :ori_sqlfield)/2 [
localmake "cur_sqlfield item repcount*2-1 :ori_sqlfield
ifelse member? :cur_sqlfield replaceattr2 :field [
  ;某字段得到了键入值
  ;queue "new_sqlfield :cur_sqlfield
  queue "new_sqlfield replaceattr3 :cur_sqlfield :field
  ][
    ;需要默认值，且默认值大于12，则判断是否是自增字段
    ifelse (count item repcount*2 :ori_sqlfield)>12 [
    ifelse "autoincrease = hair.base.getitem 12 item repcount*2 :ori_sqlfield [
    ;遇到自增字段，忽略设置的值
    ;queue "new_sqlfield :cur_sqlfield
    queue "new_sqlfield hair.base.delitem 12 item repcount*2 :ori_sqlfield
    make word "hair_sql_ :tablename (se hair.base.getitem (hair.base.index :cur_sqlfield thing word "hair_sql_ :tablename) thing word "hair_sql_ :tablename
      (word "autoincrease 1+hair.base.delitem 12 item repcount*2 :ori_sqlfield)
      hair.base.delitem (hair.base.index :cur_sqlfield thing word "hair_sql_ :tablename)+1 thing word "hair_sql_ :tablename
    )][queue "new_sqlfield item repcount*2 :ori_sqlfield]][
    ;某字段需要默认值
    ;queue "new_sqlfield :cur_sqlfield
    queue "new_sqlfield item repcount*2 :ori_sqlfield]
  ]]
make (word "hair_sql_ :tablename "_data) listtoarray se arraytolist thing (word "hair_sql_ :tablename "_data) (list listtoarray :new_sqlfield)
if :mode = "async [
  make "hair_sql_async lput hair.object.replace :tablename `[sql_async.name.val word __name ".hsql .writepr ,:new_sqlfield .position.val 0 .overwritepr thing word "hair_sql_ __name] 3 :hair_sql_async
]
end

;删除temp中所有的偶数项
to replaceattr2 :temp
if (count :temp)<2 [op :temp]
localmake "counttemp (count :temp)/2
for [i 1 :counttemp][make "temp hair.base.bmitem :i*2-:i+1 :temp]
op :temp
END

;找到对应字段的值
to replaceattr3 :temp :list
if :temp = first :list [op first bf :list]
op replaceattr3 :temp bf bf :list
end

bury [replaceattr2 replaceattr3 hair.sql.insert]
